RunConsoleCommand = RunConsoleCommand
import format from string
Jailbreak = Jailbreak
import Run from hook
MsgC = MsgC
GM = GM

Jailbreak.VoiceChatState = Jailbreak.VoiceChatState or false
Jailbreak.PlayingTaunt = Jailbreak.PlayingTaunt or false
Jailbreak.TauntFraction = Jailbreak.TauntFraction or 0
Jailbreak.ViewEntity = Jailbreak.ViewEntity or NULL
Jailbreak.Player = Jailbreak.Player or NULL

hook.Add "RenderScene", "Jailbreak::PlayerInitialized", ->
    hook.Remove "RenderScene", "Jailbreak::PlayerInitialized"
    unless Jailbreak.Player\IsValid!
        ply = LocalPlayer!
        Jailbreak.Player = ply
        Jailbreak.PlayerIndex = ply\EntIndex!
        Run( "PlayerInitialized", ply )
        return true

GM.PlayerInitialized = =>
    RunConsoleCommand( "dsp_player", "1" )
    RunConsoleCommand( "dsp_room", "1" )

GM.InitPostEntity = =>
    RunConsoleCommand( "r_flushlod" )

    mapName = game.GetMap!
    Jailbreak.MapName = mapName
    Run( "MapInitialized", mapName )
    return

GM.PostCleanupMap = =>
    RunConsoleCommand( "r_cleardecals" )
    Run( "MapInitialized", Jailbreak.MapName )
    return

GM.OnSpawnMenuOpen = =>
    RunConsoleCommand( "lastinv" )

GM.PostProcessPermitted = =>
    return false

do

    Jailbreak.DrawHUD = GetConVar( "cl_drawhud" )\GetBool!

    cvars.AddChangeCallback( "cl_drawhud", ( _, __, value ) ->
        Jailbreak.DrawHUD = value ~= "0"

        panel = Jailbreak.HUD
        if panel and panel\IsValid!
            panel\SetVisible( Jailbreak.DrawHUD )

    "Jailbreak::DrawHUD" )

do

    :PlayerModel = Jailbreak

    do

        requestedName = PlayerModel\GetString!

        modelName = Jailbreak.FormatPlayerModelName( requestedName )
        Jailbreak.SelectedPlayerModel = modelName

        if modelName ~= requestedName
            PlayerModel\SetString( modelName )
            hook.Run( "PlayerModelChanged", modelName )

    cvars.AddChangeCallback( PlayerModel\GetName!, ( _, __, requestedName ) ->
        Jailbreak.PlayerBodyGroups\SetInt( 0 )
        Jailbreak.PlayerSkin\SetInt( 0 )

        modelName = Jailbreak.FormatPlayerModelName( requestedName )
        Jailbreak.SelectedPlayerModel = modelName

        if modelName ~= requestedName
            PlayerModel\SetString( modelName )

        hook.Run( "PlayerModelChanged", modelName )
        return
    "Jailbreak::PlayerModel" )

do

    import LookupKeyBinding, IsKeyDown from input
    IsFirstTimePredicted = IsFirstTimePredicted

    GM.PlayerButtonUp = ( ply, keyCode ) =>
        unless IsFirstTimePredicted!
            return

        bind = LookupKeyBinding( keyCode )
        if keyCode == 17 and ( not bind or bind == "drop" or #bind == 0 )
            RunConsoleCommand( "drop" )
        elseif keyCode == 109 and ( not bind or bind == "marker" or #bind == 0 )
            RunConsoleCommand( "marker" )
        elseif ( keyCode == 58 or keyCode == 23 ) and ( not bind or bind == "jb_showteam" or #bind == 0 )
            RunConsoleCommand( "jb_showteam" )
        elseif keyCode == 18 and ( not bind or #bind == 0 )
            RunConsoleCommand( "pe_drop", "movement" )

    GM.PlayerButtonDown = ( ply, keyCode ) =>
        if ( keyCode == 107 or keyCode == 108 ) and IsKeyDown( 81 ) and IsFirstTimePredicted!
            RunConsoleCommand( "marker" )

do

    import ReadString, ReadUInt, ReadTable, ReadEntity, ReadBool from net
    import AddLegacy from notification
    import Translate from Jailbreak
    CHAN_STATIC = CHAN_STATIC
    import random from math
    :Colors = Jailbreak
    unpack = unpack

    notifyColors = {
        [ NOTIFY_GENERIC ]: Colors.vivid_orange
        [ NOTIFY_CLEANUP ]: Colors.horizon
        [ NOTIFY_ERROR ]: Colors.red
        [ NOTIFY_UNDO ]: Colors.blue
        [ NOTIFY_HINT ]: Colors.guards
    }

    net.Receive "Jailbreak::Networking", ->
        switch ReadUInt( 4 )
            when 0
                gameName = ReadString!
                SoundHandler( gameName )
                Jailbreak.GameName = gameName

            when 1
                Run( "PickupNotifyReceived", ReadString!, ReadUInt( 6 ), ReadUInt( 16 ) )

            when 2
                text, notifyType = format( Translate( ReadString! ), unpack( ReadTable( true ) ) ), ReadUInt( 3 )
                AddLegacy( text, notifyType, ReadUInt( 16 ) )
                MsgC( notifyColors[ notifyType ], "Notify: ", text, "\n" )

            when 3
                ply = Jailbreak.Player
                if ply\IsValid!
                    ply\EmitSound( ReadString!, 75, random( 90, 110 ), 1, CHAN_STATIC, 0, 1 )

            when 4
                entity = ReadEntity!
                if entity and entity\IsValid and entity\IsPlayer!
                    entity\AnimRestartGesture( ReadUInt( 3 ), ReadUInt( 11 ), ReadBool! )

            when 5
                RunConsoleCommand( "jb_megaphone", GetConVar( "jb_megaphone" )\GetDefault! )
                RunConsoleCommand( "jb_security_radio", GetConVar( "jb_security_radio" )\GetDefault! )

concommand.Add "jb_credits", ->
    MsgC( unpack( Jailbreak.Credits ) )
