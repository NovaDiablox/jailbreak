Jailbreak = Jailbreak
hook_Run = hook.Run
GM = GM

:Colors, :VMin = Jailbreak
:white, :black = Colors

:SetFont, :GetTextSize, :DrawText, :SetTextColor, :SetTextPos = surface
:GetPhrase = language
IsValid = IsValid
:sub, :format = string

ROUND_WAITING_PLAYERS = ROUND_WAITING_PLAYERS
ROUND_RUNNING = ROUND_RUNNING
ROUND_ENDED = ROUND_ENDED

TEXT_ALIGN_CENTER = TEXT_ALIGN_CENTER
:GetName, :GetColor = team

GM.HUDShouldDraw = ( name ) =>
    if Jailbreak.PlayingTaunt and name == "CHudWeaponSelection"
        return false

    return true

do

    :GetRoundState, :GetRemainingTime, :GetWinningTeam, :Teams = Jailbreak

    Jailbreak.Font( "Jailbreak::Winners", "Roboto Mono Bold Italic", 4 )
    Jailbreak.Font( "Jailbreak::RoundState", "Roboto Mono Medium", 4 )

    GM.HUDPaint = =>
        if @TargetID\GetBool!
            hook_Run( "HUDDrawTargetID" )

        hook_Run( "HUDDrawPickupHistory" )

        if @DeathNotice\GetBool!
            hook_Run( "DrawDeathNotice", 0.85, 0.04 )

        state = GetRoundState!
        if state == ROUND_RUNNING
            return

        text = GetPhrase( "jb.round." .. state )
        if state ~= ROUND_WAITING_PLAYERS
            remainingTime = GetRemainingTime!
            if remainingTime == 0
                return

            text = format( text, remainingTime )

        SetFont( "Jailbreak::RoundState" )

        screenCenterX = Jailbreak.ScreenCenterX
        textWidth, textHeight = GetTextSize( text )
        x, y = screenCenterX - textWidth / 2, VMin( 1 )

        SetTextPos( x - 1, y - 1 )
        SetTextColor( black.r, black.g, black.b, 50 )
        DrawText( text )

        SetTextPos( x + 3, y + 3 )
        SetTextColor( black.r, black.g, black.b, 120 )
        DrawText( text )

        SetTextColor( white )
        SetTextPos( x, y )
        DrawText( text )

        if state == ROUND_ENDED
            teamID, color = GetWinningTeam!, nil
            if Teams[ teamID ]
                text = format( GetPhrase( "#jb.victory" ), GetPhrase( GetName( teamID ) ) )
                color = GetColor( teamID )
            else
                text = GetPhrase( "#jb.draw" )
                color = Colors.light_grey

            text = "[" .. text .. "]"

            textWidth2, textHeight2 = GetTextSize( text )
            x, y = screenCenterX - textWidth2 / 2, y + ( textHeight + textHeight2 ) / 2

            SetTextPos( x - 1, y - 1 )
            SetTextColor( black.r, black.g, black.b, 50 )
            DrawText( text )

            SetTextPos( x + 3, y + 3 )
            SetTextColor( black.r, black.g, black.b, 120 )
            DrawText( text )

            SetTextColor( color )
            SetTextPos( x, y )
            DrawText( text )

do

    :SourceHUD = Jailbreak

    hook.Add "HUDPaint", "Jailbreak::Source HUD", ->
        if Jailbreak.ViewEntity ~= Jailbreak.Player
            return

        for className in *SourceHUD
            panel = Jailbreak[ className ]
            if panel and panel\IsValid!
                panel\PaintManual( true )

do

    :Translate, :VoiceChatMinDistance = Jailbreak
    :CursorVisible = vgui
    :GetCursorPos = input
    EyeAngles = EyeAngles
    MASK_SHOT = MASK_SHOT
    :SimpleText = draw
    :TraceLine = util
    EyePos = EyePos
    :Clamp = math
    :red = Colors
    Lerp = Lerp

    trace = {
        mask: MASK_SHOT
    }

    Jailbreak.Font( "Jailbreak::TargetID", "Roboto Mono Bold", 2.6 )
    Jailbreak.Font( "Jailbreak::TargetIDSmall", "Roboto Mono SemiBold Italic", 2.6 )

    GM.HUDDrawTargetID = =>
        ply = Jailbreak.Player
        unless ply\IsValid!
            return

        start = EyePos!
        trace.start = start

        endpos, filter = nil, nil
        if ply\GetObserverMode! == OBS_MODE_IN_EYE
            target = Jailbreak.ViewEntity
            if target\IsValid!
                filter = target

                if target\IsPlayer! and target\Alive!
                    endpos = start + target\GetAimVector! * VoiceChatMinDistance\GetInt!

        elseif ply\Alive! and not Jailbreak.PlayingTaunt
            endpos = start + ply\GetAimVector! * VoiceChatMinDistance\GetInt!
            filter = ply

        unless endpos
            endpos = start + EyeAngles!\Forward! * VoiceChatMinDistance\GetInt!

        trace.endpos, trace.filter = endpos, filter

        traceResult = TraceLine( trace )
        unless traceResult.Hit
            return

        if traceResult.HitWorld
            return

        entity = traceResult.Entity
        unless entity\IsValid!
            return

        isPlayerRagdoll = entity\IsPlayerRagdoll!
        isPlayer = entity\IsPlayer!
        color = white

        text = nil
        if isPlayer
            unless entity\Alive!
                return

            text = entity\Nick!
            color = entity\GetModelColor!
            frac = Clamp( entity\Health! / entity\GetMaxHealth!, 0, 1 )

            if ( color.r + color.g + color.b ) < 125
                color.r = Lerp( frac, red.r, color.r )
                color.g = Lerp( frac, red.g, color.g )
                color.b = Lerp( frac, red.b, color.b )
            else
                color.r = Lerp( frac, 0, color.r )
                color.g = Lerp( frac, 0, color.g )
                color.b = Lerp( frac, 0, color.b )

        elseif isPlayerRagdoll
            text = entity\GetNW2String( "owner-nickname", "unknown" )
            color = entity\GetModelColor!

        elseif entity\IsWeapon!
            printName = nil
            if entity\IsScripted!
                printName = entity.PrintName

            if printName
                printName = "#" .. printName
            else
                printName = entity\GetPrintName!

            if printName == "Scripted Weapon"
                printName = "#" .. entity\GetClass!

            text = Translate( printName )

        else

            className = entity\GetClass!
            if className == "class C_BaseEntity"
                className = "func_button"

            text = Translate( "#jb." .. className )

        mouseX, mouseY = GetCursorPos!
        if mouseX == 0 and mouseY == 0 or not CursorVisible!
            mouseX, mouseY = Jailbreak.ScreenCenterX, Jailbreak.ScreenCenterY

        offset = VMin( 2 )

        SetFont( "Jailbreak::TargetID" )
        textWidth, textHeight = GetTextSize( text )

        x = mouseX - textWidth / 2
        y = mouseY + offset

        SetTextPos( x - 1, y - 1 )
        SetTextColor( black.r, black.g, black.b, 50 )
        DrawText( text )

        SetTextPos( x + 3, y + 3 )
        SetTextColor( black.r, black.g, black.b, 120 )
        DrawText( text )

        SetTextColor( color )
        SetTextPos( x, y )
        DrawText( text )

        color = nil
        if isPlayer
            teamID = entity\Team!
            text = GetName( teamID )
            color = GetColor( teamID )
        elseif isPlayerRagdoll
            text = "#jb.player.corpse"
            color = Colors.light_grey
        else
            return

        SetFont( "Jailbreak::TargetIDSmall" )
        textWidth2, textHeight2 = GetTextSize( text )
        x, y = mouseX - textWidth2 / 2, y + ( textHeight + textHeight2 ) / 2

        SetTextPos( x - 1, y - 1 )
        SetTextColor( black.r, black.g, black.b, 50 )
        DrawText( text )

        SetTextPos( x + 3, y + 3 )
        SetTextColor( black.r, black.g, black.b, 120 )
        DrawText( text )

        SetTextColor( color )
        SetTextPos( x, y )
        DrawText( text )

do

    hook_Add = hook.Add

    :SourceHUD = Jailbreak
    for className in *SourceHUD
        SourceHUD[ className ] = true

    GM.StartChat = ( isTeam ) =>
        if @Reskined
            return

        hook_Add "Think", "JB::CHudReskin", ->
            viewport = vgui.GetKeyboardFocus!
            unless IsValid( viewport )
                return

            hook.Remove "Think", "JB::CHudReskin"
            @Reskined = true
            chat.Close!

            for index = 1, 5
                panel = viewport\GetParent!
                unless IsValid( panel )
                    break

                viewport = panel

            unless IsValid( viewport )
                return

            for panel in *viewport\GetChildren!
                className = panel\GetClassName!
                unless SourceHUD[ className ]
                    continue

                panel\SetPaintedManually( true )
                Jailbreak[ className ] = panel

                hook_Add "Think", panel, =>
                    ply = Jailbreak.Player
                    unless ply\IsValid!
                        return

                    @SetFGColorEx( ply\GetTeamColor!\Unpack! )
