Jailbreak = Jailbreak
CLIENT = CLIENT
:Add = hook

-- Disallow player shoot on marker setup
do

    IN_ATTACK = IN_ATTACK
    IN_WALK = IN_WALK

    Add "StartCommand", "Jailbreak::Markers", ( cmd ) =>
        if @Alive! and cmd\KeyDown( IN_WALK )
            cmd\RemoveKey( IN_ATTACK )
            cmd\RemoveKey( IN_ATTACK2 )

-- Silly death animations
Add "AllowPlayerMove", "Jailbreak::Death Animations", =>
    if @GetNW2Int( "death-animation" ) == 0
        return

    return false

Add "PlayerEmitSound", "Jailbreak::Death Animations", ( data ) =>
    if @GetNW2Int( "death-animation" ) ~= 0
        return false

-- -- TF2 Double Jump
-- Add "Move", "Jailbreak::TF2 Double Jump", ( mv ) =>
--     if Jailbreak.GameName ~= "tf" or @WaterLevel! > 1
--         return

--     if @IsOnGround!
--         @HasDoubleJump = true
--     elseif @HasDoubleJump and mv\KeyPressed( IN_JUMP )
--         @HasDoubleJump = false

--         velocity = mv\GetVelocity!
--         velocity[ 3 ] = @GetJumpPower! * 2
--         mv\SetVelocity( velocity )

-- Player can't take damage in death animation
Add "CanPlayerTakeDamage", "Jailbreak::Death Animations", =>
    if @GetNW2Int( "death-animation" ) == 2
        return false

-- Developer features
do

    IN_JUMP = IN_JUMP
    IN_DUCK = IN_DUCK
    IN_SPEED = IN_SPEED
    IN_FORWARD = IN_FORWARD
    IN_BACK = IN_BACK
    IN_MOVELEFT = IN_MOVELEFT
    IN_MOVERIGHT = IN_MOVERIGHT

    sv_gravity = GetConVar( "sv_gravity" )
    FrameTime = FrameTime
    Lerp = Lerp
    :band = bit
    :abs = math

    Add "Move", "Jailbreak::Developer", ( mv ) =>
        unless @IsFlightAllowed!
            if not CLIENT and @GetNW2Bool( "in-flight" )
                @SetNW2Bool( "in-flight", false )

            return

        if @IsOnGround!
            if not CLIENT and @GetNW2Bool( "in-flight" )
                @SetNW2Bool( "in-flight", false )

        elseif @GetNW2Bool( "in-flight" )
            velocity = mv\GetVelocity!
            angles = mv\GetMoveAngles!

            buttons = mv\GetButtons!

            if band( buttons, IN_FORWARD ) ~= 0
                velocity += angles\Forward! * 16
                buttons -= IN_FORWARD

            if band( buttons, IN_BACK ) ~= 0
                velocity += angles\Forward! * -16
                buttons -= IN_BACK

            if band( buttons, IN_MOVELEFT ) ~= 0
                velocity += angles\Right! * -16
                buttons -= IN_MOVELEFT

            if band( buttons, IN_MOVERIGHT ) ~= 0
                velocity += angles\Right! * 16
                buttons -= IN_MOVERIGHT

            if band( buttons, IN_JUMP ) ~= 0
                velocity += angles\Up! * 16
                buttons -= IN_JUMP

            if band( buttons, IN_DUCK ) ~= 0
                velocity += angles\Up! * -16
                buttons -= IN_DUCK

            frameTime = FrameTime!

            if band( buttons, IN_SPEED ) ~= 0
                velocity[ 1 ] = Lerp( frameTime, velocity[ 1 ], 0 )
                velocity[ 2 ] = Lerp( frameTime, velocity[ 2 ], 0 )
                velocity[ 3 ] = Lerp( frameTime, velocity[ 3 ], 0 )
                buttons -= IN_SPEED

            if abs( velocity[ 1 ] ) < 1
                velocity[ 1 ] = 0

            if abs( velocity[ 2 ] ) < 1
                velocity[ 2 ] = 0

            if abs( velocity[ 3 ] ) < 1
                velocity[ 3 ] = 0

            velocity[ 3 ] += ( @GetGravity! + 1 ) * sv_gravity\GetFloat! * 0.5 * frameTime

            mv\SetVelocity( velocity )
            mv\SetButtons( buttons )

        elseif not CLIENT and mv\KeyPressed( IN_JUMP )
            @SetNW2Bool( "in-flight", true )

do

    CurTime = CurTime

    Add "Move", "Jailbreak::weapon_stunstick", ( mv ) =>
        shockTime = @GetNW2Int( "shock-time" )
        if shockTime == 0 or CurTime! > shockTime
            return

        mv\SetMaxSpeed( @GetWalkSpeed! / 4 )

Add "PlayerEmitSound", "Jailbreak::SilentDeath", ( data ) =>
    unless @Alive!
        return false

PLAYER = FindMetaTable( "Player" )

-- Block player movement while spawning
do

    :IsSpawning = PLAYER

    Add "AllowPlayerMove", "Jailbreak::PlayerSpawning", =>
        if IsSpawning( @ )
            return false

-- Block player movement while taunting
do

    :IsPlayingTaunt = PLAYER

    Add( "Move", "Jailbreak::Taunts", ( mv ) =>
        if IsPlayingTaunt( @ )
            mv\SetSideSpeed( 0 )
            mv\SetUpSpeed( 0 )

    POST_HOOK )

-- Block player movement while player in spectator mode
do

    :Alive, :GetObserverMode = PLAYER
    OBS_MODE_NONE = OBS_MODE_NONE

    Add "AllowPlayerMove", "Jailbreak::AliveSpectator", =>
        if Alive( @ ) and GetObserverMode( @ ) ~= OBS_MODE_NONE
            return false
