AddCSLuaFile( "cl_init.lua" )
AddCSLuaFile( "shared.lua" )
include( "shared.lua" )

SWEP.UseDoor = ( open ) =>
    curTime, lastDoorLock = CurTime!, @LastDoorLock or 0
    @LastDoorLock = curTime

    if curTime - lastDoorLock <= 0.025
        return

    owner = @GetOwner!
    start = owner\GetShootPos!
    traceResult = util.TraceLine( {
        start: start
        endpos: start + owner\GetAimVector! * 64
        filter: owner
    } )

    unless traceResult.Hit
        return

    entity = traceResult.Entity
    unless IsValid( entity )
        return

    className = entity\GetClass!
    if className == "prop_door_rotating"
        if owner\Team! ~= TEAM_GUARD
            entity\EmitSound( "physics/wood/wood_crate_impact_hard2.wav", 100, math.random( 90, 110 ), 1, CHAN_STATIC, 0, 1 )
            return

        owner\EmitSound( "npc/metropolice/gear" .. math.random( 1, 6 ) .. ".wav", 50, math.random( 80, 120 ), 1, CHAN_STATIC, 0, 1 )
        timer.Simple 0.8, ->
            unless entity\IsValid!
                return
            entity\EmitSound( "doors/door_latch3.wav", 50, math.random( 80, 120 ), 1, CHAN_STATIC, 0, 1 )
        entity\Fire( open and "unlock" or "lock", "", 0 )
        owner\AnimRestartGesture( GESTURE_SLOT_ATTACK_AND_RELOAD, ACT_GMOD_GESTURE_ITEM_PLACE, true )
    elseif className == "func_button"
        entity\EmitSound( "buttons/blip1.wav", 70, math.random( 90, 110 ), 1, CHAN_STATIC, 0, 1 )
        entity\Use( owner, owner )

do

    ConVarFlags = bit.bor( FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_DONTRECORD )
    SWEP.MinDamage = CreateConVar( "jb_hands_damage_min", "8", ConVarFlags, "", 0, 16384 )
    SWEP.MaxDamage = CreateConVar( "jb_hands_damage_max", "12", ConVarFlags, "", 0, 16384 )

phys_pushscale = GetConVar( "phys_pushscale" )

SWEP.HitEntity = ( entity, owner, origin ) =>
    hit, anim = false, @GetSequenceName( owner\GetViewModel!\GetSequence! )

    if IsValid( entity )
        scale = phys_pushscale\GetFloat!
        if entity\Health! > 0

            attacker = owner
            unless IsValid( attacker )
                attacker = @

            damageInfo = DamageInfo!
            damageInfo\SetInflictor( @ )
            damageInfo\SetAttacker( attacker )
            damageInfo\SetDamageType( DMG_SLASH )
            damageInfo\SetDamage( math.random( @MinDamage\GetInt!, @MaxDamage\GetInt! ) )

            if anim == "fists_left"
                damageInfo\SetDamageForce( owner\GetRight! * 4912 * scale + owner\GetForward! * 9998 * scale ) -- Yes we need those specific numbers
            elseif anim == "fists_right"
                damageInfo\SetDamageForce( owner\GetRight! * -4912 * scale + owner\GetForward! * 9989 * scale )
            elseif anim == "fists_uppercut"
                damageInfo\SetDamageForce( owner\GetUp! * 5158 * scale + owner\GetForward! * 10012 * scale )
                damageInfo\ScaleDamage( 2 )

            -- Let the breakable gibs spawn in multiplayer on client
            SuppressHostEvents( NULL )
            entity\TakeDamageInfo( damageInfo )
            SuppressHostEvents( owner )
            hit = true

        phys = entity\GetPhysicsObject!
        if IsValid( phys )
            phys\ApplyForceOffset( owner\GetAimVector! * 80 * phys\GetMass! * scale, origin )

    if hit and anim ~= "fists_uppercut"
        @SetCombo( @GetCombo! + 1 )
    else
        @SetCombo( 0 )

SWEP.Materials = {
    [ MAT_WOOD ]: 5
    [ MAT_VENT ]: 15
    [ MAT_GLASS ]: 15
    [ MAT_METAL ]: 10
    [ MAT_GRATE ]: 10
    [ MAT_CONCRETE ]: 10
}

SWEP.HitMaterial = ( matType, owner ) =>
    damage = @Materials[ matType ]
    if damage ~= nil
        damageInfo = DamageInfo!
        damageInfo\SetInflictor( @ )
        damageInfo\SetAttacker( owner )
        damageInfo\SetDamage( math.ceil( owner\Health! * ( damage / 100 ) ) )

        if matType == MAT_COMPUTER
            damageInfo\SetDamageType( DMG_SHOCK )

            if owner\HasShockCollar!
                damageInfo\ScaleDamage( 2 )

        else
            damageInfo\SetDamageType( DMG_SLASH )

        owner\TakeDamageInfo( damageInfo )

SWEP.OnDrop = =>
    @Remove!
