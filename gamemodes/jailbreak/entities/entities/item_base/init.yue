AddCSLuaFile( "cl_init.lua" )
:Run = hook

ENT.Type = "anim"
ENT.Sequence = "idle"
ENT.RenderGroup = RENDERGROUP_OPAQUE

ENT.RespawnTime = 20

ENT.Initialize = =>
    @SetModel( Model( @Model ) )
    @PhysicsInit( SOLID_VPHYSICS )
    @SetMoveType( MOVETYPE_NONE )
    @SetSolid( SOLID_BBOX )

    @AddEFlags( EFL_NO_ROTORWASH_PUSH )
	@SetNotSolid( true )
    @SetNoDraw( true )

    @SetCollisionGroup( COLLISION_GROUP_WEAPON )
    @UseTriggerBounds( true, 24 )

    @ResetSequence( @Sequence )
    @Show!

    init = @Init
    if init ~= nil
        init( @ )

ENT.Hide = =>
    @SetNoDraw( true )
    @SetTrigger( false )

    @SetPos( @Origin )
    @SetAngles( @Angles )

    @DropToFloor!
    @RemoveAllDecals!

    timer.Simple @RespawnTime, ->
        if @IsValid!
            @Show!

ENT.Show = =>
    if @GetNoDraw!
        @EmitSound( Sound( "Item.Show" ) )
        @SetNoDraw( false )
        @MuzzleFlash!
    @SetTrigger( true )

ENT.Touch = ( entity ) =>
    if @IsDisabled! or @GetNoDraw!
        return

    if entity\IsVehicle!
        entity = entity\GetPassenger( 1 )
        unless entity\IsValid!
            return

    unless entity\IsPlayer!
        return

    if Run( "PlayerCanPickupItem", entity, @ ) == false
        return

    playerGotItem = @PlayerGotItem
    unless playerGotItem and playerGotItem( @, entity )
        return

    soundName = @Sound
    if soundName
        entity\EmitSound( soundName )

    @Hide!

ENT.IsDisabled = =>
    return @Disabled or false

ENT.Disable = =>
	@Disabled = true
    @SetNoDraw( @Disabled )

ENT.Enable = =>
	@Disabled = false
    @SetNoDraw( @Disabled )

ENT.Toggle = =>
	@Disabled = not @Disabled
    @SetNoDraw( @Disabled )

ENT.AcceptInput = ( key, activator, caller, data ) =>
    switch key
        when "Disable"
            @Disabled = true
        when "Enable"
            @Disabled = false
        when "Toggle"
            @Disabled = not @Disabled

ENT.KeyValue = ( key, value ) =>
    switch key
        when "origin"
            @Origin = Vector( value )
        when "angles"
            @Angles = Angle( value )
        when "StartDisabled"
            @Disabled = tobool( value )
